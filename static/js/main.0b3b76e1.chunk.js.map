{"version":3,"sources":["components/Converter.js","functions.js","App.js","reportWebVitals.js","index.js"],"names":["Converter","useState","convertFrom","setConvertFrom","input","setInput","result","setResult","handleConvert","num","match","Number","answer","convert","10","11","12","13","14","15","remainder","unshift","Math","floor","join","decToHex","A","B","C","D","E","F","split","reverse","map","el","i","toUpperCase","pow","reduce","a","b","hexToDec","className","value","onChange","e","target","id","type","placeholder","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAkEeA,MA9Df,WAAsB,IAAD,EACmBC,mBAAS,WAD5B,mBACZC,EADY,KACCC,EADD,OAEOF,mBAAS,IAFhB,mBAEZG,EAFY,KAELC,EAFK,OAGSJ,mBAAS,IAHlB,mBAGZK,EAHY,KAGJC,EAHI,KAKbC,EAAgB,WACpB,OACID,EADmB,YAAhBL,ECVX,SAAkBO,GAChB,GAAIA,EAAIC,MAAM,SAAWD,EACvB,MAAO,uBAOT,IAJA,IAAIH,EADJG,EAAME,OAAOF,GAEPG,EAAS,GACTC,EAAU,CAAEC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,IAAKC,GAAI,KAE5Db,EAAS,GAAG,CACjB,IAAIc,EAAYd,EAAS,GACrBc,EAAY,IACdA,EAAYP,EAAQO,IAEtBR,EAAOS,QAAQD,GACfd,EAASgB,KAAKC,MAAMjB,EAAS,IAG/B,OAAOM,EAAOY,KAAK,IDPHC,CAASrB,GCU3B,SAAkBK,GAChB,GAAIA,EAAIC,MAAM,iBAAmBD,EAC/B,MAAO,uBAET,IAAMI,EAAU,CAAEa,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACpDzB,EAASG,EAAIuB,MAAM,IAAIC,UAQ3B,OAPA3B,EAASA,EAAO4B,KAAI,SAACC,EAAIC,GAKvB,OAJID,EAAGzB,MAAM,aACXyB,EAAKA,EAAGE,cACRF,EAAKtB,EAAQsB,IAEFA,EAAKb,KAAKgB,IAAI,GAAIF,OAEnBG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KDtBnBC,CAAStC,KAQzB,OACE,sBAAKuC,UAAU,YAAf,UACE,uBAAMA,UAAU,QAAhB,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOC,MAAM,YAAb,kBACA,yBACEA,MAAO1C,EACP2C,SAAU,SAACC,GAAD,OAAO3C,EAAe2C,EAAEC,OAAOH,QAF3C,UAIE,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,cAAd,+BAGJ,sBAAKD,UAAU,YAAf,UACE,uBAAOC,MAAM,UAAb,gBACA,iCACmB,YAAhB1C,EACC,wBAAQ0C,MAAM,cAAd,yBAEA,wBAAQA,MAAM,UAAd,6BAKR,qBAAKD,UAAU,WAAf,SACE,uBACEK,GAAG,cACHC,KAAK,UACLL,MAAOxC,EACP8C,YAAY,uBACZL,SAAU,SAACC,GACTzC,EAASyC,EAAEC,OAAOH,YAIxB,wBAAQD,UAAU,MAAMQ,QAAS,kBAAM3C,KAAvC,qBAGA,mBAAGmC,UAAU,aAAb,SAA2BrC,IAC3B,wBAAQqC,UAAU,MAAMQ,QAAS,kBA3CnC9C,EAAS,SACTE,EAAU,KA0CR,uBE5CS6C,MAZf,WACE,OACE,sBAAKT,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,uCACA,0DAEF,cAAC,EAAD,QCESU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0b3b76e1.chunk.js","sourcesContent":["import { decToHex, hexToDec } from \"../functions\";\nimport { useState } from \"react\";\nimport \"./Converter.css\";\n\nfunction Converter() {\n  const [convertFrom, setConvertFrom] = useState(\"decimal\");\n  const [input, setInput] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n\n  const handleConvert = () => {\n    return convertFrom === \"decimal\"\n      ? setResult(decToHex(input))\n      : setResult(hexToDec(input));\n  };\n\n  const handleReset = () => {\n    setInput(\"\");\n    setResult(\"\");\n  };\n\n  return (\n    <div className=\"Converter\">\n      <form className=\"forms\">\n        <div className=\"container\">\n          <label value=\"fromLabel\">From</label>\n          <select\n            value={convertFrom}\n            onChange={(e) => setConvertFrom(e.target.value)}\n          >\n            <option value=\"decimal\">DECIMAL</option>\n            <option value=\"haxadecimal\">HEXADECIMAL</option>\n          </select>\n        </div>\n        <div className=\"container\">\n          <label value=\"toLabel\">To</label>\n          <select>\n            {convertFrom === \"decimal\" ? (\n              <option value=\"haxadecimal\">HEXADECIMAL</option>\n            ) : (\n              <option value=\"decimal\">DECIMAL</option>\n            )}\n          </select>\n        </div>\n      </form>\n      <div className=\"inputBox\">\n        <input\n          id=\"inputNumber\"\n          type=\"textbox\"\n          value={input}\n          placeholder=\"enter a valid number\"\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        ></input>\n      </div>\n      <button className=\"btn\" onClick={() => handleConvert()}>\n        CONVERT\n      </button>\n      <p className=\"resultText\">{result}</p>\n      <button className=\"btn\" onClick={() => handleReset()}>\n        RESET\n      </button>\n    </div>\n  );\n}\n\nexport default Converter;\n","function decToHex(num) {\n  if (num.match(/\\D/g) || !num) {\n    return \"Enter a valid number\";\n  }\n  num = Number(num);\n  let result = num;\n  const answer = [];\n  const convert = { 10: \"A\", 11: \"B\", 12: \"C\", 13: \"D\", 14: \"E\", 15: \"F\" };\n\n  while (result > 0) {\n    let remainder = result % 16;\n    if (remainder > 9) {\n      remainder = convert[remainder];\n    }\n    answer.unshift(remainder);\n    result = Math.floor(result / 16);\n  }\n\n  return answer.join(\"\");\n}\n\nfunction hexToDec(num) {\n  if (num.match(/[^a-f|\\d]/gi) || !num) {\n    return \"Enter a valid number\";\n  }\n  const convert = { A: 10, B: 11, C: 12, D: 13, E: 14, F: 15 };\n  let result = num.split(\"\").reverse();\n  result = result.map((el, i) => {\n    if (el.match(/[A-F]/gi)) {\n      el = el.toUpperCase();\n      el = convert[el];\n    }\n    return (el = el * Math.pow(16, i));\n  });\n  return result.reduce((a, b) => a + b);\n}\n\nexport { decToHex, hexToDec };\n","import \"./App.css\";\nimport Converter from \"./components/Converter\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>HEXED</h1>\n        <h3>Hexadecimal Converter</h3>\n      </header>\n      <Converter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}